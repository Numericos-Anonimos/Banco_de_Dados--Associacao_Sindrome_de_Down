{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\r\n * Same as Binary, but with 64-bit offsets, allowing to represent\r\n * extremely large data values.\r\n */\nexport class LargeBinary {\n  constructor() {\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  __init(i, bb) {\n    this.bb_pos = i;\n    this.bb = bb;\n    return this;\n  }\n  static getRootAsLargeBinary(bb, obj) {\n    return (obj || new LargeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  static getSizePrefixedRootAsLargeBinary(bb, obj) {\n    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n    return (obj || new LargeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  static startLargeBinary(builder) {\n    builder.startObject(0);\n  }\n  static endLargeBinary(builder) {\n    const offset = builder.endObject();\n    return offset;\n  }\n  static createLargeBinary(builder) {\n    LargeBinary.startLargeBinary(builder);\n    return LargeBinary.endLargeBinary(builder);\n  }\n}","map":{"version":3,"names":["flatbuffers","LargeBinary","constructor","bb","bb_pos","__init","i","getRootAsLargeBinary","obj","readInt32","position","getSizePrefixedRootAsLargeBinary","setPosition","SIZE_PREFIX_LENGTH","startLargeBinary","builder","startObject","endLargeBinary","offset","endObject","createLargeBinary"],"sources":["C:\\Users\\emclulo\\Downloads\\GitHub\\Banco_de_Dados--Associacao_Sindrome_de_Down\\timetable_canvas\\frontend\\node_modules\\apache-arrow\\src\\fb\\large-binary.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport * as flatbuffers from 'flatbuffers';\r\n\r\n/**\r\n * Same as Binary, but with 64-bit offsets, allowing to represent\r\n * extremely large data values.\r\n */\r\nexport class LargeBinary {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n  bb_pos = 0;\r\n__init(i:number, bb:flatbuffers.ByteBuffer):LargeBinary {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n}\r\n\r\nstatic getRootAsLargeBinary(bb:flatbuffers.ByteBuffer, obj?:LargeBinary):LargeBinary {\r\n  return (obj || new LargeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\nstatic getSizePrefixedRootAsLargeBinary(bb:flatbuffers.ByteBuffer, obj?:LargeBinary):LargeBinary {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new LargeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\nstatic startLargeBinary(builder:flatbuffers.Builder) {\r\n  builder.startObject(0);\r\n}\r\n\r\nstatic endLargeBinary(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  const offset = builder.endObject();\r\n  return offset;\r\n}\r\n\r\nstatic createLargeBinary(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  LargeBinary.startLargeBinary(builder);\r\n  return LargeBinary.endLargeBinary(builder);\r\n}\r\n}\r\n"],"mappings":"AAAA;AAEA,OAAO,KAAKA,WAAW,MAAM,aAAa;AAE1C;;;;AAIA,OAAM,MAAOC,WAAW;EAAxBC,YAAA;IACE,KAAAC,EAAE,GAAgC,IAAI;IACtC,KAAAC,MAAM,GAAG,CAAC;EA6BZ;EA5BAC,MAAMA,CAACC,CAAQ,EAAEH,EAAyB;IACxC,IAAI,CAACC,MAAM,GAAGE,CAAC;IACf,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,OAAOI,oBAAoBA,CAACJ,EAAyB,EAAEK,GAAgB;IACrE,OAAO,CAACA,GAAG,IAAI,IAAIP,WAAW,EAAE,EAAEI,MAAM,CAACF,EAAE,CAACM,SAAS,CAACN,EAAE,CAACO,QAAQ,EAAE,CAAC,GAAGP,EAAE,CAACO,QAAQ,EAAE,EAAEP,EAAE,CAAC;EAC3F;EAEA,OAAOQ,gCAAgCA,CAACR,EAAyB,EAAEK,GAAgB;IACjFL,EAAE,CAACS,WAAW,CAACT,EAAE,CAACO,QAAQ,EAAE,GAAGV,WAAW,CAACa,kBAAkB,CAAC;IAC9D,OAAO,CAACL,GAAG,IAAI,IAAIP,WAAW,EAAE,EAAEI,MAAM,CAACF,EAAE,CAACM,SAAS,CAACN,EAAE,CAACO,QAAQ,EAAE,CAAC,GAAGP,EAAE,CAACO,QAAQ,EAAE,EAAEP,EAAE,CAAC;EAC3F;EAEA,OAAOW,gBAAgBA,CAACC,OAA2B;IACjDA,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC;EACxB;EAEA,OAAOC,cAAcA,CAACF,OAA2B;IAC/C,MAAMG,MAAM,GAAGH,OAAO,CAACI,SAAS,EAAE;IAClC,OAAOD,MAAM;EACf;EAEA,OAAOE,iBAAiBA,CAACL,OAA2B;IAClDd,WAAW,CAACa,gBAAgB,CAACC,OAAO,CAAC;IACrC,OAAOd,WAAW,CAACgB,cAAc,CAACF,OAAO,CAAC;EAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}