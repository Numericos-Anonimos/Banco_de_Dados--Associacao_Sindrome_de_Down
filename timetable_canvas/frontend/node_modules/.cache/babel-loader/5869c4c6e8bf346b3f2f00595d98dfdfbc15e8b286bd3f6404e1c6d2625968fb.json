{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty.mjs';\nimport { BigIntAvailable } from '../util/compat.mjs';\n/**\r\n * Dynamically compile the null values into an `isValid()` function whose\r\n * implementation is a switch statement. Microbenchmarks in v8 indicate\r\n * this approach is 25% faster than using an ES6 Map.\r\n *\r\n * @example\r\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\r\n * `function (x) {\r\n *     if (x !== x) return false;\r\n *     switch (x) {\r\n *         case null:\r\n *         case \"N/A\":\r\n *             return false;\r\n *     }\r\n *     return true;\r\n * }`\r\n *\r\n * @ignore\r\n * @param nullValues\r\n */\nexport function createIsValidFunction(nullValues) {\n  if (!nullValues || nullValues.length <= 0) {\n    // @ts-ignore\n    return function isValid(value) {\n      return true;\n    };\n  }\n  let fnBody = '';\n  const noNaNs = nullValues.filter(x => x === x);\n  if (noNaNs.length > 0) {\n    fnBody = \"\\n    switch (x) {\".concat(noNaNs.map(x => \"\\n        case \".concat(valueToCase(x), \":\")).join(''), \"\\n            return false;\\n    }\");\n  }\n  // NaN doesn't equal anything including itself, so it doesn't work as a\n  // switch case. Instead we must explicitly check for NaN before the switch.\n  if (nullValues.length !== noNaNs.length) {\n    fnBody = \"if (x !== x) return false;\\n\".concat(fnBody);\n  }\n  return new Function(\"x\", \"\".concat(fnBody, \"\\nreturn true;\"));\n}\n/** @ignore */\nfunction valueToCase(x) {\n  if (typeof x !== 'bigint') {\n    return valueToString(x);\n  } else if (BigIntAvailable) {\n    return \"\".concat(valueToString(x), \"n\");\n  }\n  return \"\\\"\".concat(valueToString(x), \"\\\"\");\n}","map":{"version":3,"names":["valueToString","BigIntAvailable","createIsValidFunction","nullValues","length","isValid","value","fnBody","noNaNs","filter","x","concat","map","valueToCase","join","Function"],"sources":["C:\\Users\\emclulo\\Downloads\\GitHub\\Banco_de_Dados--Associacao_Sindrome_de_Down\\timetable_canvas\\frontend\\node_modules\\apache-arrow\\src\\builder\\valid.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\r\n// or more contributor license agreements.  See the NOTICE file\r\n// distributed with this work for additional information\r\n// regarding copyright ownership.  The ASF licenses this file\r\n// to you under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance\r\n// with the License.  You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing,\r\n// software distributed under the License is distributed on an\r\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied.  See the License for the\r\n// specific language governing permissions and limitations\r\n// under the License.\r\n\r\nimport { DataType } from '../type.js';\r\nimport { valueToString } from '../util/pretty.js';\r\nimport { BigIntAvailable } from '../util/compat.js';\r\n\r\n/**\r\n * Dynamically compile the null values into an `isValid()` function whose\r\n * implementation is a switch statement. Microbenchmarks in v8 indicate\r\n * this approach is 25% faster than using an ES6 Map.\r\n *\r\n * @example\r\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\r\n * `function (x) {\r\n *     if (x !== x) return false;\r\n *     switch (x) {\r\n *         case null:\r\n *         case \"N/A\":\r\n *             return false;\r\n *     }\r\n *     return true;\r\n * }`\r\n *\r\n * @ignore\r\n * @param nullValues\r\n */\r\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\r\n\r\n    if (!nullValues || nullValues.length <= 0) {\r\n        // @ts-ignore\r\n        return function isValid(value: any) { return true; };\r\n    }\r\n\r\n    let fnBody = '';\r\n    const noNaNs = nullValues.filter((x) => x === x);\r\n\r\n    if (noNaNs.length > 0) {\r\n        fnBody = `\r\n    switch (x) {${noNaNs.map((x) => `\r\n        case ${valueToCase(x)}:`).join('')}\r\n            return false;\r\n    }`;\r\n    }\r\n\r\n    // NaN doesn't equal anything including itself, so it doesn't work as a\r\n    // switch case. Instead we must explicitly check for NaN before the switch.\r\n    if (nullValues.length !== noNaNs.length) {\r\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\r\n    }\r\n\r\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\r\n}\r\n\r\n/** @ignore */\r\nfunction valueToCase(x: any) {\r\n    if (typeof x !== 'bigint') {\r\n        return valueToString(x);\r\n    } else if (BigIntAvailable) {\r\n        return `${valueToString(x)}n`;\r\n    }\r\n    return `\"${valueToString(x)}\"`;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,eAAe,QAAQ,oBAAoB;AAEpD;;;;;;;;;;;;;;;;;;;;AAoBA,OAAM,SAAUC,qBAAqBA,CAAwCC,UAAiC;EAE1G,IAAI,CAACA,UAAU,IAAIA,UAAU,CAACC,MAAM,IAAI,CAAC,EAAE;IACvC;IACA,OAAO,SAASC,OAAOA,CAACC,KAAU;MAAI,OAAO,IAAI;IAAE,CAAC;;EAGxD,IAAIC,MAAM,GAAG,EAAE;EACf,MAAMC,MAAM,GAAGL,UAAU,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKA,CAAC,CAAC;EAEhD,IAAIF,MAAM,CAACJ,MAAM,GAAG,CAAC,EAAE;IACnBG,MAAM,wBAAAI,MAAA,CACIH,MAAM,CAACI,GAAG,CAAEF,CAAC,sBAAAC,MAAA,CAChBE,WAAW,CAACH,CAAC,CAAC,MAAG,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,uCAEpC;;EAGF;EACA;EACA,IAAIX,UAAU,CAACC,MAAM,KAAKI,MAAM,CAACJ,MAAM,EAAE;IACrCG,MAAM,kCAAAI,MAAA,CAAkCJ,MAAM,CAAE;;EAGpD,OAAO,IAAIQ,QAAQ,SAAAJ,MAAA,CAASJ,MAAM,mBAAgB,CAA4C;AAClG;AAEA;AACA,SAASM,WAAWA,CAACH,CAAM;EACvB,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;IACvB,OAAOV,aAAa,CAACU,CAAC,CAAC;GAC1B,MAAM,IAAIT,eAAe,EAAE;IACxB,UAAAU,MAAA,CAAUX,aAAa,CAACU,CAAC,CAAC;;EAE9B,YAAAC,MAAA,CAAWX,aAAa,CAACU,CAAC,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}