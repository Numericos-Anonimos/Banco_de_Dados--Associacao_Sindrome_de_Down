{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { UnionMode } from './union-mode.mjs';\n/**\r\n * A union is a complex type with children in Field\r\n * By default ids in the type vector refer to the offsets in the children\r\n * optionally typeIds provides an indirection between the child offset and the type id\r\n * for each child `typeIds[offset]` is the id used in the type vector\r\n */\nexport class Union {\n  constructor() {\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  __init(i, bb) {\n    this.bb_pos = i;\n    this.bb = bb;\n    return this;\n  }\n  static getRootAsUnion(bb, obj) {\n    return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  static getSizePrefixedRootAsUnion(bb, obj) {\n    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n    return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  mode() {\n    const offset = this.bb.__offset(this.bb_pos, 4);\n    return offset ? this.bb.readInt16(this.bb_pos + offset) : UnionMode.Sparse;\n  }\n  typeIds(index) {\n    const offset = this.bb.__offset(this.bb_pos, 6);\n    return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n  }\n  typeIdsLength() {\n    const offset = this.bb.__offset(this.bb_pos, 6);\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n  }\n  typeIdsArray() {\n    const offset = this.bb.__offset(this.bb_pos, 6);\n    return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n  }\n  static startUnion(builder) {\n    builder.startObject(2);\n  }\n  static addMode(builder, mode) {\n    builder.addFieldInt16(0, mode, UnionMode.Sparse);\n  }\n  static addTypeIds(builder, typeIdsOffset) {\n    builder.addFieldOffset(1, typeIdsOffset, 0);\n  }\n  static createTypeIdsVector(builder, data) {\n    builder.startVector(4, data.length, 4);\n    for (let i = data.length - 1; i >= 0; i--) {\n      builder.addInt32(data[i]);\n    }\n    return builder.endVector();\n  }\n  static startTypeIdsVector(builder, numElems) {\n    builder.startVector(4, numElems, 4);\n  }\n  static endUnion(builder) {\n    const offset = builder.endObject();\n    return offset;\n  }\n  static createUnion(builder, mode, typeIdsOffset) {\n    Union.startUnion(builder);\n    Union.addMode(builder, mode);\n    Union.addTypeIds(builder, typeIdsOffset);\n    return Union.endUnion(builder);\n  }\n}","map":{"version":3,"names":["flatbuffers","UnionMode","Union","constructor","bb","bb_pos","__init","i","getRootAsUnion","obj","readInt32","position","getSizePrefixedRootAsUnion","setPosition","SIZE_PREFIX_LENGTH","mode","offset","__offset","readInt16","Sparse","typeIds","index","__vector","typeIdsLength","__vector_len","typeIdsArray","Int32Array","bytes","buffer","byteOffset","startUnion","builder","startObject","addMode","addFieldInt16","addTypeIds","typeIdsOffset","addFieldOffset","createTypeIdsVector","data","startVector","length","addInt32","endVector","startTypeIdsVector","numElems","endUnion","endObject","createUnion"],"sources":["C:\\Users\\emclulo\\Downloads\\GitHub\\Banco_de_Dados--Associacao_Sindrome_de_Down\\timetable_canvas\\frontend\\node_modules\\apache-arrow\\src\\fb\\union.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport * as flatbuffers from 'flatbuffers';\r\n\r\nimport { UnionMode } from './union-mode.js';\r\n\r\n\r\n/**\r\n * A union is a complex type with children in Field\r\n * By default ids in the type vector refer to the offsets in the children\r\n * optionally typeIds provides an indirection between the child offset and the type id\r\n * for each child `typeIds[offset]` is the id used in the type vector\r\n */\r\nexport class Union {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n  bb_pos = 0;\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Union {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n}\r\n\r\nstatic getRootAsUnion(bb:flatbuffers.ByteBuffer, obj?:Union):Union {\r\n  return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\nstatic getSizePrefixedRootAsUnion(bb:flatbuffers.ByteBuffer, obj?:Union):Union {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\nmode():UnionMode {\r\n  const offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : UnionMode.Sparse;\r\n}\r\n\r\ntypeIds(index: number):number|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n}\r\n\r\ntypeIdsLength():number {\r\n  const offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n}\r\n\r\ntypeIdsArray():Int32Array|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n}\r\n\r\nstatic startUnion(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n}\r\n\r\nstatic addMode(builder:flatbuffers.Builder, mode:UnionMode) {\r\n  builder.addFieldInt16(0, mode, UnionMode.Sparse);\r\n}\r\n\r\nstatic addTypeIds(builder:flatbuffers.Builder, typeIdsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, typeIdsOffset, 0);\r\n}\r\n\r\nstatic createTypeIdsVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;\r\n/**\r\n * @deprecated This Uint8Array overload will be removed in the future.\r\n */\r\nstatic createTypeIdsVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;\r\nstatic createTypeIdsVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (let i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt32(data[i]!);\r\n  }\r\n  return builder.endVector();\r\n}\r\n\r\nstatic startTypeIdsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n}\r\n\r\nstatic endUnion(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  const offset = builder.endObject();\r\n  return offset;\r\n}\r\n\r\nstatic createUnion(builder:flatbuffers.Builder, mode:UnionMode, typeIdsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  Union.startUnion(builder);\r\n  Union.addMode(builder, mode);\r\n  Union.addTypeIds(builder, typeIdsOffset);\r\n  return Union.endUnion(builder);\r\n}\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}