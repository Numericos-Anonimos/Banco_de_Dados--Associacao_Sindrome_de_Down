{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { Buffer } from './buffer.mjs';\nimport { TensorDim } from './tensor-dim.mjs';\nimport { Type } from './type.mjs';\nexport class Tensor {\n  constructor() {\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  __init(i, bb) {\n    this.bb_pos = i;\n    this.bb = bb;\n    return this;\n  }\n  static getRootAsTensor(bb, obj) {\n    return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  static getSizePrefixedRootAsTensor(bb, obj) {\n    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n    return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  typeType() {\n    const offset = this.bb.__offset(this.bb_pos, 4);\n    return offset ? this.bb.readUint8(this.bb_pos + offset) : Type.NONE;\n  }\n  /**\r\n   * The type of data contained in a value cell. Currently only fixed-width\r\n   * value types are supported, no strings or nested types\r\n   */\n  // @ts-ignore\n  type(obj) {\n    const offset = this.bb.__offset(this.bb_pos, 6);\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n  }\n  /**\r\n   * The dimensions of the tensor, optionally named\r\n   */\n  shape(index, obj) {\n    const offset = this.bb.__offset(this.bb_pos, 8);\n    return offset ? (obj || new TensorDim()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n  }\n  shapeLength() {\n    const offset = this.bb.__offset(this.bb_pos, 8);\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n  }\n  /**\r\n   * Non-negative byte offsets to advance one value cell along each dimension\r\n   * If omitted, default to row-major order (C-like).\r\n   */\n  strides(index) {\n    const offset = this.bb.__offset(this.bb_pos, 10);\n    return offset ? this.bb.readInt64(this.bb.__vector(this.bb_pos + offset) + index * 8) : this.bb.createLong(0, 0);\n  }\n  stridesLength() {\n    const offset = this.bb.__offset(this.bb_pos, 10);\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n  }\n  /**\r\n   * The location and size of the tensor's data\r\n   */\n  data(obj) {\n    const offset = this.bb.__offset(this.bb_pos, 12);\n    return offset ? (obj || new Buffer()).__init(this.bb_pos + offset, this.bb) : null;\n  }\n  static startTensor(builder) {\n    builder.startObject(5);\n  }\n  static addTypeType(builder, typeType) {\n    builder.addFieldInt8(0, typeType, Type.NONE);\n  }\n  static addType(builder, typeOffset) {\n    builder.addFieldOffset(1, typeOffset, 0);\n  }\n  static addShape(builder, shapeOffset) {\n    builder.addFieldOffset(2, shapeOffset, 0);\n  }\n  static createShapeVector(builder, data) {\n    builder.startVector(4, data.length, 4);\n    for (let i = data.length - 1; i >= 0; i--) {\n      builder.addOffset(data[i]);\n    }\n    return builder.endVector();\n  }\n  static startShapeVector(builder, numElems) {\n    builder.startVector(4, numElems, 4);\n  }\n  static addStrides(builder, stridesOffset) {\n    builder.addFieldOffset(3, stridesOffset, 0);\n  }\n  static createStridesVector(builder, data) {\n    builder.startVector(8, data.length, 8);\n    for (let i = data.length - 1; i >= 0; i--) {\n      builder.addInt64(data[i]);\n    }\n    return builder.endVector();\n  }\n  static startStridesVector(builder, numElems) {\n    builder.startVector(8, numElems, 8);\n  }\n  static addData(builder, dataOffset) {\n    builder.addFieldStruct(4, dataOffset, 0);\n  }\n  static endTensor(builder) {\n    const offset = builder.endObject();\n    builder.requiredField(offset, 6); // type\n    builder.requiredField(offset, 8); // shape\n    builder.requiredField(offset, 12); // data\n    return offset;\n  }\n  static finishTensorBuffer(builder, offset) {\n    builder.finish(offset);\n  }\n  static finishSizePrefixedTensorBuffer(builder, offset) {\n    builder.finish(offset, undefined, true);\n  }\n}","map":{"version":3,"names":["flatbuffers","Buffer","TensorDim","Type","Tensor","constructor","bb","bb_pos","__init","i","getRootAsTensor","obj","readInt32","position","getSizePrefixedRootAsTensor","setPosition","SIZE_PREFIX_LENGTH","typeType","offset","__offset","readUint8","NONE","type","__union","shape","index","__indirect","__vector","shapeLength","__vector_len","strides","readInt64","createLong","stridesLength","data","startTensor","builder","startObject","addTypeType","addFieldInt8","addType","typeOffset","addFieldOffset","addShape","shapeOffset","createShapeVector","startVector","length","addOffset","endVector","startShapeVector","numElems","addStrides","stridesOffset","createStridesVector","addInt64","startStridesVector","addData","dataOffset","addFieldStruct","endTensor","endObject","requiredField","finishTensorBuffer","finish","finishSizePrefixedTensorBuffer","undefined"],"sources":["C:\\Users\\emclulo\\Downloads\\GitHub\\Banco_de_Dados--Associacao_Sindrome_de_Down\\timetable_canvas\\frontend\\node_modules\\apache-arrow\\src\\fb\\tensor.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport * as flatbuffers from 'flatbuffers';\r\n\r\nimport { Buffer } from './buffer.js';\r\nimport { TensorDim } from './tensor-dim.js';\r\nimport { Type } from './type.js';\r\n\r\n\r\nexport class Tensor {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n  bb_pos = 0;\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Tensor {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n}\r\n\r\nstatic getRootAsTensor(bb:flatbuffers.ByteBuffer, obj?:Tensor):Tensor {\r\n  return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\nstatic getSizePrefixedRootAsTensor(bb:flatbuffers.ByteBuffer, obj?:Tensor):Tensor {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n}\r\n\r\ntypeType():Type {\r\n  const offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readUint8(this.bb_pos + offset) : Type.NONE;\r\n}\r\n\r\n/**\r\n * The type of data contained in a value cell. Currently only fixed-width\r\n * value types are supported, no strings or nested types\r\n */\r\n// @ts-ignore\r\ntype<T extends flatbuffers.Table>(obj:any):any|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\r\n}\r\n\r\n/**\r\n * The dimensions of the tensor, optionally named\r\n */\r\nshape(index: number, obj?:TensorDim):TensorDim|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new TensorDim()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n}\r\n\r\nshapeLength():number {\r\n  const offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n}\r\n\r\n/**\r\n * Non-negative byte offsets to advance one value cell along each dimension\r\n * If omitted, default to row-major order (C-like).\r\n */\r\nstrides(index: number):flatbuffers.Long|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : this.bb!.createLong(0, 0);\r\n}\r\n\r\nstridesLength():number {\r\n  const offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n}\r\n\r\n/**\r\n * The location and size of the tensor's data\r\n */\r\ndata(obj?:Buffer):Buffer|null {\r\n  const offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new Buffer()).__init(this.bb_pos + offset, this.bb!) : null;\r\n}\r\n\r\nstatic startTensor(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n}\r\n\r\nstatic addTypeType(builder:flatbuffers.Builder, typeType:Type) {\r\n  builder.addFieldInt8(0, typeType, Type.NONE);\r\n}\r\n\r\nstatic addType(builder:flatbuffers.Builder, typeOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, typeOffset, 0);\r\n}\r\n\r\nstatic addShape(builder:flatbuffers.Builder, shapeOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, shapeOffset, 0);\r\n}\r\n\r\nstatic createShapeVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (let i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]!);\r\n  }\r\n  return builder.endVector();\r\n}\r\n\r\nstatic startShapeVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n}\r\n\r\nstatic addStrides(builder:flatbuffers.Builder, stridesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, stridesOffset, 0);\r\n}\r\n\r\nstatic createStridesVector(builder:flatbuffers.Builder, data:flatbuffers.Long[]):flatbuffers.Offset {\r\n  builder.startVector(8, data.length, 8);\r\n  for (let i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt64(data[i]!);\r\n  }\r\n  return builder.endVector();\r\n}\r\n\r\nstatic startStridesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 8);\r\n}\r\n\r\nstatic addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(4, dataOffset, 0);\r\n}\r\n\r\nstatic endTensor(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  const offset = builder.endObject();\r\n  builder.requiredField(offset, 6) // type\r\n  builder.requiredField(offset, 8) // shape\r\n  builder.requiredField(offset, 12) // data\r\n  return offset;\r\n}\r\n\r\nstatic finishTensorBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset);\r\n}\r\n\r\nstatic finishSizePrefixedTensorBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset, undefined, true);\r\n}\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}