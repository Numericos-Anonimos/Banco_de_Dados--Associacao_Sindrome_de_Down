{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from '../util/buffer.mjs';\nimport { BufferBuilder } from './buffer.mjs';\nimport { VariableWidthBuilder } from '../builder.mjs';\n/** @ignore */\nexport class BinaryBuilder extends VariableWidthBuilder {\n  constructor(opts) {\n    super(opts);\n    this._values = new BufferBuilder(new Uint8Array(0));\n  }\n  get byteLength() {\n    let size = this._pendingLength + this.length * 4;\n    this._offsets && (size += this._offsets.byteLength);\n    this._values && (size += this._values.byteLength);\n    this._nulls && (size += this._nulls.byteLength);\n    return size;\n  }\n  setValue(index, value) {\n    return super.setValue(index, toUint8Array(value));\n  }\n  _flushPending(pending, pendingLength) {\n    const offsets = this._offsets;\n    const data = this._values.reserve(pendingLength).buffer;\n    let offset = 0;\n    for (const [index, value] of pending) {\n      if (value === undefined) {\n        offsets.set(index, 0);\n      } else {\n        const length = value.length;\n        data.set(value, offset);\n        offsets.set(index, length);\n        offset += length;\n      }\n    }\n  }\n}","map":{"version":3,"names":["toUint8Array","BufferBuilder","VariableWidthBuilder","BinaryBuilder","constructor","opts","_values","Uint8Array","byteLength","size","_pendingLength","length","_offsets","_nulls","setValue","index","value","_flushPending","pending","pendingLength","offsets","data","reserve","buffer","offset","undefined","set"],"sources":["C:\\Users\\emclulo\\Downloads\\GitHub\\Banco_de_Dados--Associacao_Sindrome_de_Down\\timetable_canvas\\frontend\\node_modules\\apache-arrow\\src\\builder\\binary.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\r\n// or more contributor license agreements.  See the NOTICE file\r\n// distributed with this work for additional information\r\n// regarding copyright ownership.  The ASF licenses this file\r\n// to you under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance\r\n// with the License.  You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing,\r\n// software distributed under the License is distributed on an\r\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied.  See the License for the\r\n// specific language governing permissions and limitations\r\n// under the License.\r\n\r\nimport { Binary } from '../type.js';\r\nimport { toUint8Array } from '../util/buffer.js';\r\nimport { BufferBuilder } from './buffer.js';\r\nimport { VariableWidthBuilder, BuilderOptions } from '../builder.js';\r\n\r\n/** @ignore */\r\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\r\n    constructor(opts: BuilderOptions<Binary, TNull>) {\r\n        super(opts);\r\n        this._values = new BufferBuilder(new Uint8Array(0));\r\n    }\r\n    public get byteLength(): number {\r\n        let size = this._pendingLength + (this.length * 4);\r\n        this._offsets && (size += this._offsets.byteLength);\r\n        this._values && (size += this._values.byteLength);\r\n        this._nulls && (size += this._nulls.byteLength);\r\n        return size;\r\n    }\r\n    public setValue(index: number, value: Uint8Array) {\r\n        return super.setValue(index, toUint8Array(value));\r\n    }\r\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\r\n        const offsets = this._offsets;\r\n        const data = this._values.reserve(pendingLength).buffer;\r\n        let offset = 0;\r\n        for (const [index, value] of pending) {\r\n            if (value === undefined) {\r\n                offsets.set(index, 0);\r\n            } else {\r\n                const length = value.length;\r\n                data.set(value, offset);\r\n                offsets.set(index, length);\r\n                offset += length;\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,YAAY,QAAQ,oBAAoB;AACjD,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,oBAAoB,QAAwB,gBAAgB;AAErE;AACA,OAAM,MAAOC,aAA2B,SAAQD,oBAAmC;EAC/EE,YAAYC,IAAmC;IAC3C,KAAK,CAACA,IAAI,CAAC;IACX,IAAI,CAACC,OAAO,GAAG,IAAIL,aAAa,CAAC,IAAIM,UAAU,CAAC,CAAC,CAAC,CAAC;EACvD;EACA,IAAWC,UAAUA,CAAA;IACjB,IAAIC,IAAI,GAAG,IAAI,CAACC,cAAc,GAAI,IAAI,CAACC,MAAM,GAAG,CAAE;IAClD,IAAI,CAACC,QAAQ,KAAKH,IAAI,IAAI,IAAI,CAACG,QAAQ,CAACJ,UAAU,CAAC;IACnD,IAAI,CAACF,OAAO,KAAKG,IAAI,IAAI,IAAI,CAACH,OAAO,CAACE,UAAU,CAAC;IACjD,IAAI,CAACK,MAAM,KAAKJ,IAAI,IAAI,IAAI,CAACI,MAAM,CAACL,UAAU,CAAC;IAC/C,OAAOC,IAAI;EACf;EACOK,QAAQA,CAACC,KAAa,EAAEC,KAAiB;IAC5C,OAAO,KAAK,CAACF,QAAQ,CAACC,KAAK,EAAEf,YAAY,CAACgB,KAAK,CAAC,CAAC;EACrD;EACUC,aAAaA,CAACC,OAA4C,EAAEC,aAAqB;IACvF,MAAMC,OAAO,GAAG,IAAI,CAACR,QAAQ;IAC7B,MAAMS,IAAI,GAAG,IAAI,CAACf,OAAO,CAACgB,OAAO,CAACH,aAAa,CAAC,CAACI,MAAM;IACvD,IAAIC,MAAM,GAAG,CAAC;IACd,KAAK,MAAM,CAACT,KAAK,EAAEC,KAAK,CAAC,IAAIE,OAAO,EAAE;MAClC,IAAIF,KAAK,KAAKS,SAAS,EAAE;QACrBL,OAAO,CAACM,GAAG,CAACX,KAAK,EAAE,CAAC,CAAC;OACxB,MAAM;QACH,MAAMJ,MAAM,GAAGK,KAAK,CAACL,MAAM;QAC3BU,IAAI,CAACK,GAAG,CAACV,KAAK,EAAEQ,MAAM,CAAC;QACvBJ,OAAO,CAACM,GAAG,CAACX,KAAK,EAAEJ,MAAM,CAAC;QAC1Ba,MAAM,IAAIb,MAAM;;;EAG5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}