{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\n/**\r\n * ----------------------------------------------------------------------\r\n * A Buffer represents a single contiguous memory segment\r\n */\nexport class Buffer {\n  constructor() {\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  __init(i, bb) {\n    this.bb_pos = i;\n    this.bb = bb;\n    return this;\n  }\n  /**\r\n   * The relative offset into the shared memory page where the bytes for this\r\n   * buffer starts\r\n   */\n  offset() {\n    return this.bb.readInt64(this.bb_pos);\n  }\n  /**\r\n   * The absolute length (in bytes) of the memory buffer. The memory is found\r\n   * from offset (inclusive) to offset + length (non-inclusive). When building\r\n   * messages using the encapsulated IPC message, padding bytes may be written\r\n   * after a buffer, but such padding bytes do not need to be accounted for in\r\n   * the size here.\r\n   */\n  length() {\n    return this.bb.readInt64(this.bb_pos + 8);\n  }\n  static sizeOf() {\n    return 16;\n  }\n  static createBuffer(builder, offset, length) {\n    builder.prep(8, 16);\n    builder.writeInt64(length);\n    builder.writeInt64(offset);\n    return builder.offset();\n  }\n}","map":{"version":3,"names":["Buffer","constructor","bb","bb_pos","__init","i","offset","readInt64","length","sizeOf","createBuffer","builder","prep","writeInt64"],"sources":["C:\\Users\\emclulo\\Downloads\\GitHub\\Banco_de_Dados--Associacao_Sindrome_de_Down\\timetable_canvas\\frontend\\node_modules\\apache-arrow\\src\\fb\\buffer.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport * as flatbuffers from 'flatbuffers';\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * A Buffer represents a single contiguous memory segment\r\n */\r\nexport class Buffer {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n  bb_pos = 0;\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Buffer {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n}\r\n\r\n/**\r\n * The relative offset into the shared memory page where the bytes for this\r\n * buffer starts\r\n */\r\noffset():flatbuffers.Long {\r\n  return this.bb!.readInt64(this.bb_pos);\r\n}\r\n\r\n/**\r\n * The absolute length (in bytes) of the memory buffer. The memory is found\r\n * from offset (inclusive) to offset + length (non-inclusive). When building\r\n * messages using the encapsulated IPC message, padding bytes may be written\r\n * after a buffer, but such padding bytes do not need to be accounted for in\r\n * the size here.\r\n */\r\nlength():flatbuffers.Long {\r\n  return this.bb!.readInt64(this.bb_pos + 8);\r\n}\r\n\r\nstatic sizeOf():number {\r\n  return 16;\r\n}\r\n\r\nstatic createBuffer(builder:flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long):flatbuffers.Offset {\r\n  builder.prep(8, 16);\r\n  builder.writeInt64(length);\r\n  builder.writeInt64(offset);\r\n  return builder.offset();\r\n}\r\n\r\n}\r\n"],"mappings":"AAAA;AAIA;;;;AAIA,OAAM,MAAOA,MAAM;EAAnBC,YAAA;IACE,KAAAC,EAAE,GAAgC,IAAI;IACtC,KAAAC,MAAM,GAAG,CAAC;EAqCZ;EApCAC,MAAMA,CAACC,CAAQ,EAAEH,EAAyB;IACxC,IAAI,CAACC,MAAM,GAAGE,CAAC;IACf,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,OAAO,IAAI;EACb;EAEA;;;;EAIAI,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACJ,EAAG,CAACK,SAAS,CAAC,IAAI,CAACJ,MAAM,CAAC;EACxC;EAEA;;;;;;;EAOAK,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACN,EAAG,CAACK,SAAS,CAAC,IAAI,CAACJ,MAAM,GAAG,CAAC,CAAC;EAC5C;EAEA,OAAOM,MAAMA,CAAA;IACX,OAAO,EAAE;EACX;EAEA,OAAOC,YAAYA,CAACC,OAA2B,EAAEL,MAAwB,EAAEE,MAAwB;IACjGG,OAAO,CAACC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;IACnBD,OAAO,CAACE,UAAU,CAACL,MAAM,CAAC;IAC1BG,OAAO,CAACE,UAAU,CAACP,MAAM,CAAC;IAC1B,OAAOK,OAAO,CAACL,MAAM,EAAE;EACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}