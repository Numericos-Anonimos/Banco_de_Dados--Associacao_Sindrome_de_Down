{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor.mjs';\nimport { BinaryBuilder } from '../builder/binary.mjs';\nimport { BoolBuilder } from '../builder/bool.mjs';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date.mjs';\nimport { DecimalBuilder } from '../builder/decimal.mjs';\nimport { DictionaryBuilder } from '../builder/dictionary.mjs';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary.mjs';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist.mjs';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float.mjs';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval.mjs';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int.mjs';\nimport { ListBuilder } from '../builder/list.mjs';\nimport { MapBuilder } from '../builder/map.mjs';\nimport { NullBuilder } from '../builder/null.mjs';\nimport { StructBuilder } from '../builder/struct.mjs';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp.mjs';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time.mjs';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union.mjs';\nimport { Utf8Builder } from '../builder/utf8.mjs';\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n  visitNull() {\n    return NullBuilder;\n  }\n  visitBool() {\n    return BoolBuilder;\n  }\n  visitInt() {\n    return IntBuilder;\n  }\n  visitInt8() {\n    return Int8Builder;\n  }\n  visitInt16() {\n    return Int16Builder;\n  }\n  visitInt32() {\n    return Int32Builder;\n  }\n  visitInt64() {\n    return Int64Builder;\n  }\n  visitUint8() {\n    return Uint8Builder;\n  }\n  visitUint16() {\n    return Uint16Builder;\n  }\n  visitUint32() {\n    return Uint32Builder;\n  }\n  visitUint64() {\n    return Uint64Builder;\n  }\n  visitFloat() {\n    return FloatBuilder;\n  }\n  visitFloat16() {\n    return Float16Builder;\n  }\n  visitFloat32() {\n    return Float32Builder;\n  }\n  visitFloat64() {\n    return Float64Builder;\n  }\n  visitUtf8() {\n    return Utf8Builder;\n  }\n  visitBinary() {\n    return BinaryBuilder;\n  }\n  visitFixedSizeBinary() {\n    return FixedSizeBinaryBuilder;\n  }\n  visitDate() {\n    return DateBuilder;\n  }\n  visitDateDay() {\n    return DateDayBuilder;\n  }\n  visitDateMillisecond() {\n    return DateMillisecondBuilder;\n  }\n  visitTimestamp() {\n    return TimestampBuilder;\n  }\n  visitTimestampSecond() {\n    return TimestampSecondBuilder;\n  }\n  visitTimestampMillisecond() {\n    return TimestampMillisecondBuilder;\n  }\n  visitTimestampMicrosecond() {\n    return TimestampMicrosecondBuilder;\n  }\n  visitTimestampNanosecond() {\n    return TimestampNanosecondBuilder;\n  }\n  visitTime() {\n    return TimeBuilder;\n  }\n  visitTimeSecond() {\n    return TimeSecondBuilder;\n  }\n  visitTimeMillisecond() {\n    return TimeMillisecondBuilder;\n  }\n  visitTimeMicrosecond() {\n    return TimeMicrosecondBuilder;\n  }\n  visitTimeNanosecond() {\n    return TimeNanosecondBuilder;\n  }\n  visitDecimal() {\n    return DecimalBuilder;\n  }\n  visitList() {\n    return ListBuilder;\n  }\n  visitStruct() {\n    return StructBuilder;\n  }\n  visitUnion() {\n    return UnionBuilder;\n  }\n  visitDenseUnion() {\n    return DenseUnionBuilder;\n  }\n  visitSparseUnion() {\n    return SparseUnionBuilder;\n  }\n  visitDictionary() {\n    return DictionaryBuilder;\n  }\n  visitInterval() {\n    return IntervalBuilder;\n  }\n  visitIntervalDayTime() {\n    return IntervalDayTimeBuilder;\n  }\n  visitIntervalYearMonth() {\n    return IntervalYearMonthBuilder;\n  }\n  visitFixedSizeList() {\n    return FixedSizeListBuilder;\n  }\n  visitMap() {\n    return MapBuilder;\n  }\n}\n/** @ignore */\nexport const instance = new GetBuilderCtor();","map":{"version":3,"names":["Visitor","BinaryBuilder","BoolBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","FixedSizeBinaryBuilder","FixedSizeListBuilder","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","ListBuilder","MapBuilder","NullBuilder","StructBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","UnionBuilder","DenseUnionBuilder","SparseUnionBuilder","Utf8Builder","GetBuilderCtor","visitNull","visitBool","visitInt","visitInt8","visitInt16","visitInt32","visitInt64","visitUint8","visitUint16","visitUint32","visitUint64","visitFloat","visitFloat16","visitFloat32","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","visitDateDay","visitDateMillisecond","visitTimestamp","visitTimestampSecond","visitTimestampMillisecond","visitTimestampMicrosecond","visitTimestampNanosecond","visitTime","visitTimeSecond","visitTimeMillisecond","visitTimeMicrosecond","visitTimeNanosecond","visitDecimal","visitList","visitStruct","visitUnion","visitDenseUnion","visitSparseUnion","visitDictionary","visitInterval","visitIntervalDayTime","visitIntervalYearMonth","visitFixedSizeList","visitMap","instance"],"sources":["C:\\Users\\emclulo\\Downloads\\GitHub\\Banco_de_Dados--Associacao_Sindrome_de_Down\\timetable_canvas\\frontend\\node_modules\\apache-arrow\\src\\visitor\\builderctor.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\r\n// or more contributor license agreements.  See the NOTICE file\r\n// distributed with this work for additional information\r\n// regarding copyright ownership.  The ASF licenses this file\r\n// to you under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance\r\n// with the License.  You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing,\r\n// software distributed under the License is distributed on an\r\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied.  See the License for the\r\n// specific language governing permissions and limitations\r\n// under the License.\r\n\r\nimport { Data } from '../data.js';\r\nimport { Type } from '../enum.js';\r\nimport { Vector } from '../vector.js';\r\nimport { DataType } from '../type.js';\r\nimport { Visitor } from '../visitor.js';\r\nimport { BuilderCtor } from '../interfaces.js';\r\nimport { BinaryBuilder } from '../builder/binary.js';\r\nimport { BoolBuilder } from '../builder/bool.js';\r\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date.js';\r\nimport { DecimalBuilder } from '../builder/decimal.js';\r\nimport { DictionaryBuilder } from '../builder/dictionary.js';\r\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary.js';\r\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist.js';\r\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float.js';\r\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval.js';\r\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int.js';\r\nimport { ListBuilder } from '../builder/list.js';\r\nimport { MapBuilder } from '../builder/map.js';\r\nimport { NullBuilder } from '../builder/null.js';\r\nimport { StructBuilder } from '../builder/struct.js';\r\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp.js';\r\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time.js';\r\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union.js';\r\nimport { Utf8Builder } from '../builder/utf8.js';\r\n\r\n/** @ignore */\r\nexport interface GetBuilderCtor extends Visitor {\r\n    visit<T extends Type>(type: T): BuilderCtor<T>;\r\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\r\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\r\n    getVisitFn<T extends DataType>(node: Vector<T> | Data<T> | T): () => BuilderCtor<T>;\r\n}\r\n\r\n/** @ignore */\r\nexport class GetBuilderCtor extends Visitor {\r\n    public visitNull() { return NullBuilder; }\r\n    public visitBool() { return BoolBuilder; }\r\n    public visitInt() { return IntBuilder; }\r\n    public visitInt8() { return Int8Builder; }\r\n    public visitInt16() { return Int16Builder; }\r\n    public visitInt32() { return Int32Builder; }\r\n    public visitInt64() { return Int64Builder; }\r\n    public visitUint8() { return Uint8Builder; }\r\n    public visitUint16() { return Uint16Builder; }\r\n    public visitUint32() { return Uint32Builder; }\r\n    public visitUint64() { return Uint64Builder; }\r\n    public visitFloat() { return FloatBuilder; }\r\n    public visitFloat16() { return Float16Builder; }\r\n    public visitFloat32() { return Float32Builder; }\r\n    public visitFloat64() { return Float64Builder; }\r\n    public visitUtf8() { return Utf8Builder; }\r\n    public visitBinary() { return BinaryBuilder; }\r\n    public visitFixedSizeBinary() { return FixedSizeBinaryBuilder; }\r\n    public visitDate() { return DateBuilder; }\r\n    public visitDateDay() { return DateDayBuilder; }\r\n    public visitDateMillisecond() { return DateMillisecondBuilder; }\r\n    public visitTimestamp() { return TimestampBuilder; }\r\n    public visitTimestampSecond() { return TimestampSecondBuilder; }\r\n    public visitTimestampMillisecond() { return TimestampMillisecondBuilder; }\r\n    public visitTimestampMicrosecond() { return TimestampMicrosecondBuilder; }\r\n    public visitTimestampNanosecond() { return TimestampNanosecondBuilder; }\r\n    public visitTime() { return TimeBuilder; }\r\n    public visitTimeSecond() { return TimeSecondBuilder; }\r\n    public visitTimeMillisecond() { return TimeMillisecondBuilder; }\r\n    public visitTimeMicrosecond() { return TimeMicrosecondBuilder; }\r\n    public visitTimeNanosecond() { return TimeNanosecondBuilder; }\r\n    public visitDecimal() { return DecimalBuilder; }\r\n    public visitList() { return ListBuilder; }\r\n    public visitStruct() { return StructBuilder; }\r\n    public visitUnion() { return UnionBuilder; }\r\n    public visitDenseUnion() { return DenseUnionBuilder; }\r\n    public visitSparseUnion() { return SparseUnionBuilder; }\r\n    public visitDictionary() { return DictionaryBuilder; }\r\n    public visitInterval() { return IntervalBuilder; }\r\n    public visitIntervalDayTime() { return IntervalDayTimeBuilder; }\r\n    public visitIntervalYearMonth() { return IntervalYearMonthBuilder; }\r\n    public visitFixedSizeList() { return FixedSizeListBuilder; }\r\n    public visitMap() { return MapBuilder; }\r\n}\r\n\r\n/** @ignore */\r\nexport const instance = new GetBuilderCtor();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}